[{"content":"In a perfect world everyone could port forward to and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward to and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q with an i5 7400T, 8GB of ram and 256 SSD as a secondary node for hosting monitoring services and smaller applications.\nThe good and the bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to (raid).\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q with an i5 7400T, 8GB of ram and 256 SSD as a secondary node for hosting monitoring services and smaller applications.\u003c/p\u003e\n\u003ch3 id=\"the-good-and-the-bad\"\u003eThe good and the bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to (raid).\u003c/p\u003e","title":"Mini pcs are perfect home servers"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config vaulues will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"}]