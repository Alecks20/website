[{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables) Automatically repull containers when a new version is pushed Custom domain support Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\ngear - favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables) Automatically repull containers when a new version is pushed Custom domain support Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear - favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables) Automatically repull containers when a new version is pushed Custom domain support Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables) Automatically repull containers when a new version is pushed Custom domain support Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage and Unlimited Bandwidth Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage and Unlimited Bandwidth - Free Plan Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress - Cya\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 6GB Storage - $3/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 6GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1.5 vCPU, 1GB RAM, 6GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1.5 vCPU, 1GB RAM, 8GB Storage - $5/month 1.5 vCPU, 1GB RAM, 6GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1.5 vCPU, 1GB RAM, 8GB Storage - $5/month 1.5 vCPU, 2GB RAM, 6GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1.5 vCPU, 1GB RAM, 8GB Storage - $5/month 2 vCPU, 2GB RAM, 6GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 6GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $5/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month Thats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be make\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":"small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\nvps providers - binarylane - capsul\nyoutubers (for learning IT) - network chuck - powercert\nanimes - serial experiments lain - cp: edgerunners - evangelion\ngames - watch dogs - minecraft - cs2 - lethal company - ready or not\nyoutubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf\n","permalink":"http://localhost:1313/favourites/","summary":"\u003cp\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003cbr\u003e\nvps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003cbr\u003e\nyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003cbr\u003e\nanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003cbr\u003e\ngames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003cbr\u003e\nyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/p\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\\ vps providers - binarylane - capsul\\ youtubers (for learning IT) - network chuck - powercert\\ animes - serial experiments lain - cp: edgerunners - evangelion\\ games - watch dogs - minecraft - cs2 - lethal company - ready or not\\ youtubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003evps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003egames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eyoutubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\\ vps providers - binarylane - capsul\\ youtubers (for learning IT) - network chuck - powercert\\ animes - serial experiments lain - cp: edgerunners - evangelion\\ games - watch dogs - minecraft - cs2 - lethal company - ready or not\\ YouTubers (entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003evps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eanimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003egames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\\ vps providers - binarylane - capsul\\ youtubers (for learning IT) - network chuck - powercert\\ Animes - serial experiments lain - cp: edgerunners - evangelion\\ Games - watch dogs - minecraft - cs2 - lethal company - ready or not\\ YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003evps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eyoutubers (for learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\\ vps providers - binarylane - capsul\\ YouTubers (For Learning IT) - network chuck - powercert\\ Animes - serial experiments lain - cp: edgerunners - evangelion\\ Games - watch dogs - minecraft - cs2 - lethal company - ready or not\\ YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003evps  providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" small web communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\\ VPS Poviders - binarylane - capsul\\ YouTubers (For Learning IT) - network chuck - powercert\\ Animes - serial experiments lain - cp: edgerunners - evangelion\\ Games - watch dogs - minecraft - cs2 - lethal company - ready or not\\ YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003esmall web communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eVPS Poviders - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse\\ VPS Providers - binarylane - capsul\\ YouTubers (For Learning IT) - network chuck - powercert\\ Animes - serial experiments lain - cp: edgerunners - evangelion\\ Games - watch dogs - minecraft - cs2 - lethal company - ready or not\\ YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\\\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni - buying november 2025!! ) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni---buying-november-2025-\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni - buying november 2025!! )\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni - buying november 2025 aka black friday!! ) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni---buying-november-2025-aka-black-friday-\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni - buying november 2025 aka black friday!! )\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - for Tafe \u0026amp; Uni - buying november 2025 aka black friday!!) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---for-tafe--uni---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - for Tafe \u0026amp; Uni - buying november 2025 aka black friday!!)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday!!) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday!!)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cyberia - bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003ebearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003etildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - binarylane - capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003ebinarylane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003ecapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - network chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003enetwork chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003epowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - serial experiments lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eserial experiments lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - cp: edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003ecp: edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eevangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - watch dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003ewatch dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eminecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - cs2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003ecs2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - lethal company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003elethal company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eready or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - brandon fm - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003ebrandon fm\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003efern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - jidion - skeeter jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eskeeter jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - jidion - Skeeter Jean - bysurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eSkeeter Jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebysurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - jidion - Skeeter Jean - bySurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@jidionpremiunm\"\u003ejidion\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eSkeeter Jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebySurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - Skeeter Jean - bySurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@therealskeeterjean\"\u003eSkeeter Jean\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebySurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - bySurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e  - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebySurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - cCberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - bySurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003ecCberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebySurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"},{"content":"I\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\nSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\nHeres a few features I want working before the Alpha launch.\nLogin with GitHub - with integration for more Git providers later (Codeberg, GitLab) Super simple to use for beginners while still providing advanced features for power users (e.g Environment Variables \u0026amp; Custom Domains) Automatically repull containers when a new version is pushed Custom domain support - for free Internal private communication between your Containers Then these are some features I\u0026rsquo;ll be adding later on.\nBuild containers from a Dockerfile in a Git repo Dedicated Public IPs for containers Self-hosted applications library, with one-click deploys for services like Gitea, Wordpress, Flarum, Matrix, Vaultwarden and much more. Container volume backups Some additional services I\u0026rsquo;ve considered which add on to the ecosystem and let you deploy even more without depending on other services.\nObject Storage (S3-Compatible API) Shared \u0026amp; Dedicated database hosting (MariaDB, Postgres, MongoDB) Now for the best part, my plans for pricing\n0.25 vCPU, 128MB RAM, 2GB Storage - Free Plan 0.5 vCPU, 256MB RAM, 4GB Storage - $1/month 1 vCPU, 512MB RAM, 6GB Storage - $3/month 1 vCPU, 1GB RAM, 8GB Storage - $5/month 1 vCPU, 2GB RAM, 10GB Storage - $7/month These are likely bound to change, however the $1-3/month plans and free tier will definitely be coming.\nThats all I have laid out for now, I\u0026rsquo;ve been working super hard to get a prototype working I\u0026rsquo;ll post another update after some progress.\n","permalink":"http://localhost:1313/posts/container-hosting-project/","summary":"\u003cp\u003eI\u0026rsquo;ve always wished there was a service with super low spec plans for dirt-cheap prices that could reliably host my tiny projects or web applications, that can also scale up if you need more power.\u003c/p\u003e\n\u003cp\u003eSo why not try and build one myself, with a huge Dedicated Server and some smart overallocation I could easy host dozens of containers and provide them for cheap, most services in the managed hosting scene target large enterprise customers but I want to make something thats genuinely great for students and hobbyists, something I would actually use myself and fills the gap in the market.\u003c/p\u003e","title":"An affordable container hosting service for Hobbyists, Students \u0026 Indie Web"},{"content":"Currently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\nThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\nCompute Nodes Lightsail is my main machine running pretty much everything, Railway is used for monitoring and failover, they currently sit on a shelf but I plan to build a server rack and add some more machines later on.\nBoth machines run Proxmox VE clustered together and host various virtual machines.\nName CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Networking Internet Line Being in Australia on the NBN, I have an FTTP (Fibre to the Premises) connection, essentially a full fibre line which is perfect for reliability and performance.\nMy ISP is small and reasonably priced, they\u0026rsquo;ve never had an outage on my line and I consistently get full speeds with zero congestion. They even provide built-in inline DDoS Protection with GSL for no extra cost. On top of that, their support actually knows what they\u0026rsquo;re talking about while taking less than a day to respond over email, probably one of the best setups you could possibly have for Homelabbing.\nLocal Network As my main router I use a Ubiquiti Edgerouter 4, an enterprise-grade business router built for performance, reliability and high uptime.\nMy network is segmented into 2 vLANs: one for my home network and another for my Homelab, this ensures that any breaches in my infrastructure don\u0026rsquo;t spread to vulnerable IoT devices or other home devices.\nExposing Services Since my network has a static IP address, most public services are exposed via port forwarding. I run multiple web services so I have a central Caddy LXC container sitting on port 80/443 which forwards web traffic to all the backend VMs.\nFor some more critical or vulnerable services like Apache Guacamole \u0026amp; PhpMyAdmin I expose them with Cloudflare Tunnels behind Cloudflare Access for added security.\nDiagram of everything I have directly exposed to the Internet.\nWhat I\u0026rsquo;m running on it Kasm Workspaces This is a software that lets you run desktops or browsers in containers on your server and stream them in browser to your local machine over local network or the internet. I use it for running Kali Linux labs for penetration testing and spinning up a browser when DNS changes are taking a while to update on my machine.\nIt may also get a lot more use during my Tafe courses (If I get in), since I\u0026rsquo;ll be taking an M4 Macbook Air I won\u0026rsquo;t be able to run x86 Linux VMs but this service will let me do that.\nA Kali Linux container running on my Kasm VM.\nPterodactyl Panel \u0026amp; Wings This allows me to create and manage all of my game servers with a clean web interface while using secure isolated docker containers on the backend and provide game servers to friends or the local community.\nGitea A self-hosted GitHub/GitLab alternative, I trust GitHub more with durability so I mainly use my Gitea server for mirrors incase something happens to GitHub or my account on it.\nTor Relay (Middle) Tor is a decentralized system for anonymous communication that hides a users ip address by routing their internet traffic through a series of volunteer-run, encrypted relays.\nI\u0026rsquo;m one of the volunteers your traffic gets routed through when using the network, I run a middle relay as its the least dangerous when it comes to law enforcement knocking at your door asking for traffic logs (If a criminal uses your relay for illegal activities).\nVPS Servers I operate a small service for friends or people in my local community offering small linux VMs hosted in my homelab for free - find more about how that works here.\nReliability My goal of building my own hosting platform more reliable than a proper hosting provider is pretty much impossible without being in a datacenter, as homes typically don\u0026rsquo;t have multiple internet lines or onsite diesel generators. However, I\u0026rsquo;m in the position where I can achieve relatively close to that level with my setup or at least good enough for my needs.\nPower: Extremely reliable, I live in a fairly new area with pretty solid power infrastructure. My next upgrade will definitely be adding a UPS. Internet: I haven\u0026rsquo;t had a single outage on my Internet line, speeds are always consistent with no congestion. Services Interfering: All services run in their own VMs with strict resource allocations. If one service crashes or maxxes out resources, nothing else is affected. Backups I follow the industry-standard 3-2-1 rule where you have a copy on production, an onsite backup and an offsite backup. I run a Proxmox Backup Server onsite which is then sent up to Backblaze B2.\nMonitoring Even though I do want to setup a proper onsite monitoring system with Prometheus \u0026amp; Grafana as a future project, HetrixTools is super easy to setup and does everything I need it to do - monitor uptime, system resources, network usage and active processes of each Node \u0026amp; VM.\nConclusion Even though my Homelab is in a great state for my needs, it can always improve, a few things I still want to do with it include:\nSetup an onsite monitoring system with Prometheus \u0026amp; Grafana Add a UPS to protect data integrity and keep systems up during short power outages Build a proper server rack and add more compute nodes (Including a proper storage server with multiple TBs of storage) And more stuff will definitely come up throughout the years.\nThanks for reading.\n","permalink":"http://localhost:1313/posts/homelab-2025/","summary":"\u003cp\u003eCurrently my Homelab is used to run services for personal use, my stuff exposed to the internet and VMs for friends or people in my local community.\u003c/p\u003e\n\u003cp\u003eThe original goal of this setup was to build a service that lets me cancel all of my vps subscriptions, which so far has succeeded, the next goal is to make the service as reliable or close to as reliable as a proper hosting provider.\u003c/p\u003e","title":"The state of my Homelab in 2025"},{"content":"A lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\nObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\nVM Templates \u0026amp; Operating Systems I already use Proxmox VE for personal vms so I\u0026rsquo;m using my existing setup for this service.\nCurrently I have a vm template for Debian 13 \u0026ldquo;Trixie\u0026rdquo;, which lets me spin up new machines with unattended updates and the setup process already complete.\nNetworking \u0026amp; Public IPs I had to get a bit creative here as residential internet connections don\u0026rsquo;t let you have multiple public ip addresses on your connection.\nTo get around this I run a vps with multiple public ips which has a secure encrypted tunnel back into a tailscale gateway running inside my home network which exposes the vm subnets/network, this setup also means I don\u0026rsquo;t have to install tailscale on any vms.\nIf someone connected to [public_vps_ip]:22 it gets relayed to [private_vm_ip]:22 through the tunnel and it all happens seemlessly.\nThis all happens behind the scenes without any noticeable latency (1-2ms latency between vps and my network, tailscale gateway gets under 0.2ms to vms)\nInternal Network Security Obviously one of the main security risks with running a service like this in my Homelab isn\u0026rsquo;t really external attacks, its vms being breached and then attacking or breaking into stuff on my home network.\nTo mitigate this I have a security group on the Proxmox firewall with a list of rules denying access to anything on my local network except the router (for internet) and tailscale gateway (to expose services). Running it on the hypervisor level adds an extra layer of security because you\u0026rsquo;d need access to Proxmox which is also firewalled off.\nConclusion This setup is still in the early stages of development, I\u0026rsquo;ve been working on it for a couple days so I\u0026rsquo;ll improve over time as I make it more robust and reliable, one of my goals for later on is to add something like high availability or an automated system as most of it is manual right now.\n","permalink":"http://localhost:1313/posts/vps-service/","summary":"\u003cp\u003eA lot of my Homelab typically sits idle, wasting power. So I had the idea of letting other people run their own linux virtual machines on it, kinda like how gcp offers \u0026ldquo;spot\u0026rdquo; vms for much cheaper as it uses excess compute capacity.\u003c/p\u003e\n\u003cp\u003eObviously I can\u0026rsquo;t provide this as a paid service since that comes with a lot of liability and legal documents to protect yourself, so I just offer it as a free service for friends.\u003c/p\u003e","title":"How I host Linux VMs for people in my Homelab"},{"content":"In a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\nSo here are a few free and paid solutions for exposing both web applications and game servers to the internet without port forwarding.\nCloudflare Tunnels This is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\nSome argue that it defeats the point of self-hosting since Cloudflare centralizes the web while the indie webs goal is the opposite, however its a great service for exposing applications for free if your fine with that tradeoff.\nTailscale (w/ an optional VPS) This solution can be either free or paid depending on if you want just yourself to be able to access your services or you want them to be exposed via a domain. You can setup Tailscale on both your devices and the server then securely connect to eachother without exposing anything publicly for completely free.\nIf you want a service to be publicly accessible via a domain, you\u0026rsquo;ll need a remote server with its own public ip address as Tailscale only lets you establish secure connections between devices, not expose things to the internet.\nYou\u0026rsquo;d install Tailscale on your home server and remote server, then on the remote server you install for example caddy and setup a reverse proxy to your home servers Tailscale address, an example config is shown below.\nexample.com {\rreverse_proxy http://100.85.48.32\r} Additionally, you can use this to expose any tcp/udp service, including Game Servers, SSH, (S)FTP and much more which requires forwarding ports from a remote server to your home servers Tailscale address but I don\u0026rsquo;t feel confident explaining how to do that.\nPlayit.gg Arguably the best free service for exposing game servers without port forwarding. The setup includes installing a program which tunnels game server traffic to their global network of relay servers.\nIts super easy to setup, you can watch a video guide here.\nYou can also use it to expose any tcp port with a dedicated IPV4 but Tailscale w/ a VPS or CF Tunnels (for websites) is a better option since playit is primarily for game servers.\n","permalink":"http://localhost:1313/posts/exposing-services/","summary":"\u003cp\u003eIn a perfect world everyone could port forward and use an ISP with DDoS Protection and Static IPs, however we don\u0026rsquo;t live in a perfect world. Many people have to deal with things like CGNAT (no public ip) and annoying ISPs.\u003c/p\u003e\n\u003cp\u003eSo here are a few \u003cstrong\u003efree and paid\u003c/strong\u003e solutions for exposing both web applications and game servers to the internet without port forwarding.\u003c/p\u003e\n\u003ch2 id=\"cloudflare-tunnels\"\u003e\u003ca href=\"https://developers.cloudflare.com/cloudflare-one/connections/connect-networks/\"\u003eCloudflare Tunnels\u003c/a\u003e\u003c/h2\u003e\n\u003cp\u003eThis is a completely free service which supports exposing only web applications to the internet using an application (cloudflared) running on your server which tunnels traffic out and exposes it via the Cloudflare Network\u003c/p\u003e","title":"Exposing self-hosted applications without a Public IP address"},{"content":"Recently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\nThe good \u0026amp; Bad Mini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\nHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\nWhere to buy them I\u0026rsquo;d recommend having a browse on eBay, find a listing with lots available which means they\u0026rsquo;re selling in bulk and make sure its not \u0026ldquo;barebones\u0026rdquo; since then your pretty much just getting a motherboard and case.\nWhy they\u0026rsquo;re such good value Similar to Thinkpads, businesses buy these machines in bulk and then decommision the old ones selling them in bulk for cheap.\n","permalink":"http://localhost:1313/posts/mini-pcs/","summary":"\u003cp\u003eRecently I picked up a $100 Lenovo ThinkCentre M710Q off ebay with an i5 7400T, 8GB of ram and a 256GB NVMe SSD to add to my Proxmox cluster.\u003c/p\u003e\n\u003ch3 id=\"the-good--bad\"\u003eThe good \u0026amp; Bad\u003c/h3\u003e\n\u003cp\u003eMini PCs are built to be small, quiet and power efficient, perfect for a home server. They\u0026rsquo;re also tiny, hence the name meaning they can live pretty much anywhere.\u003c/p\u003e\n\u003cp\u003eHowever, their form factor makes them hard to upgrade for future expandability and hard to add redundant storage to.\u003c/p\u003e","title":"The perfect home servers - Mini PCs"},{"content":"This post is made for debian based linux distros.\nDon\u0026rsquo;t expose ssh, use a VPN This is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\nNon-root account for logins / Disable root login Disabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\nadduser kuma Then add it to the list of sudoers\nusermod -aG sudo kuma Using SSH keys over plaintext passwords SSH Keys are both more convenient and more secure than a regular plaintext password, especially the default one set by your hosting provider.\nGenerate an ssh key using PuttyGen and paste it on a new line in /home/\u0026lt;your_username\u0026gt;/.ssh/authorized_keys.\nUpdating your SSH configuration This process can differ depending on your host, but for most servers the ssh config is located in /etc/ssh/sshd_config, in the file you want to change the following values.\nPasswordAuthentication no PubkeyAuthentication yes PermitRootLogin no Changing these config values will\nDisable password authentication Allow you to login using ssh keys (Which I showed how to setup above) Disable root login (Applying the steps from before) Run the command below to apply the motifications\nsudo systemctl restart ssh NTFY notifcations on ssh login Adding these lines to your /etc/profile file will send a request to your chosen ntfy server when any user logs in via ssh\nif [ -n \u0026#34;$SSH_CLIENT\u0026#34; ]; then\rNTFY=\u0026#34;${USER}@$(hostname -f) from $(echo $SSH_CLIENT|awk \u0026#39;{print $1}\u0026#39;)\u0026#34;\rcurl -u :\u0026lt;ntfy_api_key\u0026gt; -s -H \u0026#34;Title: SSH Login\u0026#34; -d \u0026#34;$NTFY\u0026#34; -L \u0026#34;https://ntfy.exaple.com/ssh\u0026#34; \u0026gt; /dev/null\rfi Modify to add your own api key and change the url to your ntfy server\nYou can also find an example on the ntfy docs here (Didn\u0026rsquo;t work for me)\n","permalink":"http://localhost:1313/posts/securing-server/","summary":"\u003cp\u003eThis post is made for debian based linux distros.\u003c/p\u003e\n\u003ch3 id=\"dont-expose-ssh-use-a-vpn\"\u003eDon\u0026rsquo;t expose ssh, use a VPN\u003c/h3\u003e\n\u003cp\u003eThis is obviously not viable for stuff running in the cloud but for a homelab server its advised to not expose ssh or management ports, if you need external access use a free VPN service like Tailscale or self-hosted Wireguard.\u003c/p\u003e\n\u003ch3 id=\"non-root-account-for-logins--disable-root-login\"\u003eNon-root account for logins / Disable root login\u003c/h3\u003e\n\u003cp\u003eDisabling the ability to login as root helps with many automated bots that brute-force ssh into your server, start by making a new user with any username you want\u003c/p\u003e","title":"Securing ssh on your Linux Server"},{"content":"I\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - my skills.\nThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\nOutside of IT I love documentaries (tech, hacking, politics, economics and true crime), anime, fixing up/reviving old thinkpads or devices and designing things.\nGear/Tech - Favourites\n","permalink":"http://localhost:1313/about/","summary":"\u003cp\u003eI\u0026rsquo;m a teenager living in Australia from a small town in New Zealand who happens to be a self-taught developer highly skilled in various tech fields - \u003ca href=\"/skills/\"\u003emy skills\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003eThis website is my own little corner of the internet to showcase my practical experience and serve as a time capsule for writings, it also helps solidify learnings as explaining things to other people is one of the best ways to remember things.\u003c/p\u003e","title":"About Me"},{"content":" Small Web Communities - 32bit.cafe - Cyberia - Bearblog - status.cafe - Tildeverse VPS Providers - BinaryLane - Capsul YouTubers (For Learning IT) - Network Chuck - Powercert Animes - Serial Experiments Lain - CP: Edgerunners - Evangelion Games - Watch Dogs - Minecraft - CS2 - Lethal Company - Ready or not YouTubers (Entertainment) - jvscholz - Brandon FM - Fern - bySurf ","permalink":"http://localhost:1313/favourites/","summary":"\u003cul\u003e\n\u003cli\u003eSmall Web Communities - \u003ca href=\"https://32bit.cafe\"\u003e32bit.cafe\u003c/a\u003e - \u003ca href=\"https://cyberia.club\"\u003eCyberia\u003c/a\u003e - \u003ca href=\"https://bearblog.dev\"\u003eBearblog\u003c/a\u003e - \u003ca href=\"https://status.cafe\"\u003estatus.cafe\u003c/a\u003e - \u003ca href=\"https://tildeverse.org\"\u003eTildeverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eVPS Providers - \u003ca href=\"https://binarylane.com.au\"\u003eBinaryLane\u003c/a\u003e  - \u003ca href=\"https://capsul.org\"\u003eCapsul\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (For Learning IT) - \u003ca href=\"https://www.youtube.com/@NetworkChuck\"\u003eNetwork Chuck\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@PowerCertAnimatedVideos\"\u003ePowercert\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eAnimes - \u003ca href=\"https://en.wikipedia.org/wiki/Serial_Experiments_Lain\"\u003eSerial Experiments Lain\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Cyberpunk:_Edgerunners\"\u003eCP: Edgerunners\u003c/a\u003e - \u003ca href=\"https://en.wikipedia.org/wiki/Neon_Genesis_Evangelion\"\u003eEvangelion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eGames - \u003ca href=\"#ZgotmplZ\"\u003eWatch Dogs\u003c/a\u003e - \u003ca href=\"https://minecraft.net\"\u003eMinecraft\u003c/a\u003e - \u003ca href=\"https://www.counter-strike.net/cs2\"\u003eCS2\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1966720/Lethal_Company/\"\u003eLethal Company\u003c/a\u003e - \u003ca href=\"https://store.steampowered.com/app/1144200/Ready_or_Not/\"\u003eReady or not\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eYouTubers (Entertainment) - \u003ca href=\"https://www.youtube.com/@jvscholz/\"\u003ejvscholz\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@BrandonFM/\"\u003eBrandon FM\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@fern-tv\"\u003eFern\u003c/a\u003e - \u003ca href=\"https://www.youtube.com/@iambysurf\"\u003ebySurf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"Favourites"},{"content":"This setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\nCompute Nodes Name CPU RAM Storage Lightsail Ryzen 5 5500 32GB DDR4 1TB SSD Railway Intel i5-7400T 8GB DDR4 256GB SSD Backups \u0026amp; Monitoring Daily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\nReliability Power outages happen at max a couple times a year (ups backup will be in place soon to mitigate that) - internet has never gone down before - I use a ubiquiti edgerouter 4, an enterprise-grade router built for 24/7 operation.\n","permalink":"http://localhost:1313/homelab/","summary":"\u003cp\u003eThis setup hosts all of my core infrastructure which consists of several Linux VMs and a couple LXC Containers. Physical nodes run Proxmox VE (Clustered).\u003c/p\u003e\n\u003ch3 id=\"compute-nodes\"\u003eCompute Nodes\u003c/h3\u003e\n\u003ctable\u003e\n  \u003cthead\u003e\n      \u003ctr\u003e\n          \u003cth\u003eName\u003c/th\u003e\n          \u003cth\u003eCPU\u003c/th\u003e\n          \u003cth\u003eRAM\u003c/th\u003e\n          \u003cth\u003eStorage\u003c/th\u003e\n      \u003c/tr\u003e\n  \u003c/thead\u003e\n  \u003ctbody\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eLightsail\u003c/td\u003e\n          \u003ctd\u003eRyzen 5 5500\u003c/td\u003e\n          \u003ctd\u003e32GB DDR4\u003c/td\u003e\n          \u003ctd\u003e1TB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n      \u003ctr\u003e\n          \u003ctd\u003eRailway\u003c/td\u003e\n          \u003ctd\u003eIntel i5-7400T\u003c/td\u003e\n          \u003ctd\u003e8GB DDR4\u003c/td\u003e\n          \u003ctd\u003e256GB SSD\u003c/td\u003e\n      \u003c/tr\u003e\n  \u003c/tbody\u003e\n\u003c/table\u003e\n\u003ch3 id=\"backups--monitoring\"\u003eBackups \u0026amp; Monitoring\u003c/h3\u003e\n\u003cp\u003eDaily backups of vm disks is sent to backblaze b2 - hetrixtools monitors server resources and uptime - ntfy notifies me of incidents with mobile push notifications.\u003c/p\u003e","title":"Homelab Setup"},{"content":"Computers Laptops (Plans - buying november 2025 aka black friday) Laptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff. Laptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment. Main PC (Built by me) CPU: Ryzen 5 5500 Memory: 32GB DDR4 GPU: RX 7800 XT Storage: 2TB NVMe + 1TB NVMe + 256GB SATA OS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot) Uses: Development, virtualization, tinkering/experiments, web browsing and entertainment. Homelab ","permalink":"http://localhost:1313/gear/","summary":"\u003ch2 id=\"computers\"\u003eComputers\u003c/h2\u003e\n\u003ch3 id=\"laptops-plans---buying-november-2025-aka-black-friday\"\u003eLaptops (Plans - buying november 2025 aka black friday)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLaptop 1: ThinkPad off eBay - for tinkering and experimenting with different Linux setups, distros and more technical stuff.\u003c/li\u003e\n\u003cli\u003eLaptop 2: Macbook Air M4 (16GB RAM, 512GB SSD) - stable everyday machine for development on the go, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"main-pc-built-by-me\"\u003eMain PC (Built by me)\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eCPU: Ryzen 5 5500\u003c/li\u003e\n\u003cli\u003eMemory: 32GB DDR4\u003c/li\u003e\n\u003cli\u003eGPU: RX 7800 XT\u003c/li\u003e\n\u003cli\u003eStorage: 2TB NVMe + 1TB NVMe + 256GB SATA\u003c/li\u003e\n\u003cli\u003eOS: Windows 11 \u0026amp; Fedora 42 KDE (Dual Boot)\u003c/li\u003e\n\u003cli\u003eUses: Development, virtualization, tinkering/experiments, web browsing and entertainment.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"homelab\"\u003e\u003ca href=\"/homelab/\"\u003eHomelab\u003c/a\u003e\u003c/h2\u003e","title":"My Gear"},{"content":"From my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\nOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\nGeneral Knowledge Built and configured custom pcs (Desktops \u0026amp; Servers) Replaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys) Familiar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware Comfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance Experienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization Troubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux) Networking Designing, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi) Knowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates Setup VPNs for secure remote access (Tailscale, Self-hosted Wireguard) Systems \u0026amp; Infrastructure Operated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS) Proficient in the Linux command line and filesystem navigation Familiar with various package managers (apt, dnf) Familiar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls) Docker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora) Maintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane) Reverse proxy setup \u0026amp; configuration (Nginx, Caddy) Basic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage) Web \u0026amp; Cloud Development Knowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo Website deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js) Domain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel) Setting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx) Intermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites) Built projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS) Experience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker) ","permalink":"http://localhost:1313/skills/","summary":"\u003cp\u003eFrom my tinkering and natural curiosity, I became familiar with basic IT concepts in networking, Linux and infrastructure at the age of 11.\u003c/p\u003e\n\u003cp\u003eOver the years I\u0026rsquo;ve delved deeper into this rabbit hole setting up a homelab and learning to administer servers in production environments, where my skills, knowledge and practical experience has grown exponentially.\u003c/p\u003e\n\u003ch2 id=\"general-knowledge\"\u003eGeneral Knowledge\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eBuilt and configured custom pcs (Desktops \u0026amp; Servers)\u003c/li\u003e\n\u003cli\u003eReplaced specific parts in pcs (Graphics Cards, NVMe SSDs, Hard drives, SATA SSDs and Power Supplys)\u003c/li\u003e\n\u003cli\u003eFamiliar with setting up Windows 10 \u0026amp; 11 and other operating systems such as Linux on various hardware\u003c/li\u003e\n\u003cli\u003eComfortable configuring BIOS/UEFI settings, installing and updating drivers, updating firmware and optimizing firmware for stability and performance\u003c/li\u003e\n\u003cli\u003eExperienced with Proxmox VE (Type 1) and Virtualbox (Type 2) virtualization\u003c/li\u003e\n\u003cli\u003eTroubleshooted dozens of issues with desktop machines and servers (Windows \u0026amp; Linux)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"networking\"\u003eNetworking\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eDesigning, configuring and troubleshooting my home network (Subnetting, Router configuration, Static IPs, Port forwarding and Wireless APs/Wi-Fi)\u003c/li\u003e\n\u003cli\u003eKnowledge of IP Addresses (Public \u0026amp; Private), NAT, Ports, DNS, Routers/Modems, Firewalls, TCP/UDP, Subnets and SSL Certificates\u003c/li\u003e\n\u003cli\u003eSetup VPNs for secure remote access (Tailscale, Self-hosted Wireguard)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"systems--infrastructure\"\u003eSystems \u0026amp; Infrastructure\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOperated and secured dozens of servers (Bare Metal, VMs and VPSes) running various linux distros (Ubuntu LTS, Debian, Fedora Server, CoreOS)\u003c/li\u003e\n\u003cli\u003eProficient in the Linux command line and filesystem navigation\u003c/li\u003e\n\u003cli\u003eFamiliar with various package managers (apt, dnf)\u003c/li\u003e\n\u003cli\u003eFamiliar with industry standard security practices (SSH Keys, Fail2Ban, No root login, Firewalls)\u003c/li\u003e\n\u003cli\u003eDocker Container deployment and management on Windows and Multiple linux distros (Ubuntu, Debian, Fedora)\u003c/li\u003e\n\u003cli\u003eMaintained lots of vps servers on various cloud platforms (DigitalOcean, Linode, AWS Lightsail, GCP \u0026amp; BinaryLane)\u003c/li\u003e\n\u003cli\u003eReverse proxy setup \u0026amp; configuration (Nginx, Caddy)\u003c/li\u003e\n\u003cli\u003eBasic knowledge and ability to setup and use S3/Object Storage buckets with experience on various providers (Self-Hosted Minio, DigitalOcean Spaces, OVH Object Storage, Cloudflare R2, Backblaze B2, Linode Object Storage)\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"web--cloud-development\"\u003eWeb \u0026amp; Cloud Development\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eKnowledge of how to use Git, GitHub and other providers including self-hosted Gitea, GitLab and Forgejo\u003c/li\u003e\n\u003cli\u003eWebsite deployment using Cloudflare/GitHub pages (Static sites) and Docker Containers (Flask, FastAPI, Express.js)\u003c/li\u003e\n\u003cli\u003eDomain/DNS management (Cloudflare, Namecheap \u0026amp; cPanel)\u003c/li\u003e\n\u003cli\u003eSetting up and configuring Wordpress sites on shared hosting (cPanel) and Self-hosted/VPS (Docker \u0026amp; Caddy/Nginx)\u003c/li\u003e\n\u003cli\u003eIntermediate skills with Python, HTML \u0026amp; CSS (Flask \u0026amp; FastAPI sites, Discord Bots, Miscellaneous Scripts and Static Websites)\u003c/li\u003e\n\u003cli\u003eBuilt projects with Python (Flask/FastAPI apps, Discord bots, automation scripts) and web technologies (HTML, CSS)\u003c/li\u003e\n\u003cli\u003eExperience operating MariaDB and MongoDB servers for self-hosted services \u0026amp; small projects (Primarily in Docker)\u003c/li\u003e\n\u003c/ul\u003e","title":"My Skills"}]